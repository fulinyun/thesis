what's the difference between FaBiO (FRBR-aligned Bibliographic Ontology) and BiRO (Bibliographic Reference Ontology)
See what's in the DoCO (Document Components Ontology) and how are they related to the TeX document model?
PRO (publishing roles ontology), PSO (publishing status ontology), PWO (publishing workflow ontology), CiTO (citation typing ontology), C4O (citation counting and context characterization ontology, a really hard to remember name:) are probably irrelevant.

DoCO defines structural (e.g. block, inline, paragraph, section, chapter -- meaning what it looks like) as well as rhetorical (e.g. introduction, discussion, acknowledgements, reference list, figure, appendix -- meaning what it means) document components

LaTeX has documents of different styles, environments, modes, 

TeX is probably designed with a much simpler model than LaTeX. LaTeX uses a lot of TeX macros to ease the work of its users.

Will an ontology such as DoCO, which is created simply by putting ontology elements from several other ontologies together, be useful? What are the possible problems with such an ontology?

TeX looks like a piece of typesetting software instead of publication preparation software. What's the difference between these two kinds of software? Typesetting, as its name indicates, deals with character printing and alignment, floating object arrangement, page settings, ..., while publication preparation software focuses on helping authors with more meaningful and higher-level/more abstract document elements such as paragraph, inline, figure, table, etc... or even higher-level frontmatter, bodymatter, backmatter,  abstract, introduction, related work...

How should I call these frontmatter, bodymatter, backmatter... stuff? functional blocks maybe? contrasting with structural blocks such as paragraphs, sentences, inlines... How about chapters, sections, ... middle-layer elements? Although introduction is usually a specific chapter, it can be a section or a sentence, so introduction is not an instance of the chapter class. a common higher-level class such as block might be useful here to represent the idea that a block is a chapter, and at the same time, the introduction of the document -- wait! perhaps we should use the introduction-of property here! Yes! introduction is always "of something", it doesn't make sense to have a floating introduction attached to nothing!

It seems that conventions to format a certain functional block lead to default typesetting elements/macros, functional blocks are more useful than structural blocks since they have more meanings and preset typesetting styles are more easily applied to functional blocks than structural blocks. What am I trying to say here? Example: if I know the block, consisting of a title and several paragraphs, is a chapter, I can make the title larger, and set proper font and size for the content of the chapter, and spacing between this block and the previous and the next block around. If I know it's the introduction chapter, it seems nothing more could be inferred, so introduction probably is too specific for the purpose of typesetting inferrence. Just knowing it's a chapter is enough for typesetting the block properly. That's why we see macros defined for chapters, sections, subsections, ... in the LaTeX specialization of TeX. 

Conferences and Journals have their own LaTeX templates for authors to use. Are they really further specializaitons of the general LaTeX document model? Not really perhaps. They are instead modifications of the LaTeX model. I am proposing a new concept in model development -- model modifications. What does it mean? Model specialization specializes models in the ways of subclassing, setting default parameter values, defining specific utility classes, ... model modification, on the other hand, reuses an existing model and only makes different settings for default parameter values. From another perspective, model modification is a form of simple model specialization, the classes reused could be seen as re-subclassed from the common more general model, with different default parameter values. Let's see, rpithes.cls (re-)defines the thesis document class and macros such as \thesistitle, \author, \degree \specialhead... I need to learn how to define document class, what does a document class have, how to redefine the typesetting of a certain macro, ...


